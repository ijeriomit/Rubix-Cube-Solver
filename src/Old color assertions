    @classmethod
    def isBlue(cls, colorstats):
        b,g,r = colorstats
        return (b > r) and (r == g) or (b == g) and (b > r) or (b > g) and (g > r) or (b > r) and (r > g)

    @classmethod
    def isGreen(cls, colorstats):
        b,g,r = colorstats
        return (g > r) and (r > b) and ((g - r) >= (.25 * r)) or (g > r) and (r == b) or (g > b) and (b > g)

    @classmethod
    def isRed(cls, colorstats):
        b, g, r = colorstats
        return (r > g) and (g == b) or (r > g) and (g > b) and ((g - b) < (.25*b)) or (r > b) and (b > g) or (r == b) and (b > g)

    @classmethod
    def isYellow(cls, colorstats): #not done
        b, g, r = colorstats
        return (g > r) and (r > b) and ((g - r) < (.25 * r)) or (g == r) and (r > b) or (r > g) and (g > b) and ((r - g) < (.25*g)) and ((g - b) >= (.25*b))

    @classmethod
    def isOrange(cls, colorstats):
        b, g, r = colorstats
        return (r > g) and (g > b) and ((r - g) >= (.25*g)) and ((g - b) >= (.25*b))

     @classmethod
    def calulatecolorstats(cls, color):
        sum = color[0] + color[1] + color[2]
        return color[0] / sum, color[1] / sum, color[2] / sum